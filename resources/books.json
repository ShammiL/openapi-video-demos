{
    "openapi": "3.0.0",
    "info": {
        "title": "sample Bookstore API",
        "version": "1.0.0",
        "description": "A sample API to demonstrate OpenAPI specification"
    },
    "paths": {
        "/books": {
            "get": {
                "summary": "List all books",
                "tags": [
                    {
                      "name": "books",
                      "description": "Operations related to books"
                    }
                  ],
                "operationId": "listBooks",
                "responses": {
                    "200": {
                        "description": "A list of books.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Book"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Add a new book",
                "tags": [
                    {
                      "name": "books",
                      "description": "Operations related to books"
                    }
                  ],
                "operationId": "addBook",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BookRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Book added successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Book"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "summary": "Get a user",
                "operationId": "getUser",
                "parameters": [
                    {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "integer"
                      }
                }
            ],
                "responses": {
                    "200": {
                        "description": "A user requested.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "User could not be found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPNotFound"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Book": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    }
                }
            },
            "BookRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    }
                }
            },
            "User": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    }
                }
            },
            "HTTPNotFound": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string"
                    }
                }
            }
        }
    }
}